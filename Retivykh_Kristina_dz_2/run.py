# -*- coding: utf-8 -*-
#


def get_type(param):
    return type(param)

#Задание 1. Выяснить тип результата выражений
def task_one():
    print("Задача 1:")
    print(get_type(15 * 3))
    print(get_type(15 / 3))
    print(get_type(15 // 2))
    print(get_type(15 ** 2))


# . Дан список.
# Необходимо его обработать — обособить каждое целое число (вещественные
# не трогаем) кавычками (добавить кавычку до и кавычку после элемента списка,
# являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура',
# 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
def task_two():
    print("Задача 2:")
    data = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха',
            'была', '+5', 'градусов']
    result = []
    for item in data:
        if item.isdigit():
            result.append(f'"{item.zfill(2)}"')
        elif item[1:].isdigit():
            result.append(f'"{item[0]}{item[1:].zfill(2)}"')
        else:
            result.append(item)
    print(" ".join(result))


# 4. Дан список, содержащий искажённые данные с должностями и именами
#  сотрудников. Известно, что имя сотрудника всегда в конце строки.
#  Сформировать и вывести на экран фразы вида: 'Привет, Игорь!'
#  Подумать, как получить имена сотрудников из элементов списка, как привести
#  их к корректному виду. Можно ли при этом не создавать новый список?
def task_four():
    print("Задача 4:")
    data = ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
           'токарь высшего разряда нИКОЛАй', 'директор аэлита']

    for employee in data:
        name = employee.split(" ")[-1] # технически split создает новый список.
        print(f"Привет, {name.capitalize()}!")


# 5. Создать список, содержащий цены на товары (10–20 товаров).
# Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
def task_five():
    print("Задача 5:")
    prices = [57.8, 46.51, 97, 45.04, 5.87, 0, 0.35, 1235, 65.35]
    id_before = id(prices)
    prices.sort()
    print(prices)

    id_after = id(prices)
    print("\nДоказать, что объект списка после сортировки остался тот же:")
    print(id_before == id_after)

    print("\nВывести цены пяти самых дорогих товаров: ")
    prices_reverce = prices.copy()
    prices_reverce.reverse()
    print(prices_reverce[:5])

    result = ""
    print("\nВывести цены, отсортированные по возрастанию, новый список "
          + "не создавать: ")
    for price in prices:
        z = int((price * 100) // 100)
        r = int((price * 100) % 100)
        result = result + f"{z} руб {str(r).zfill(2)} коп, "
    print(result)


if __name__ == '__main__':
    task_one()
    task_two()
    task_four()
    task_five()
